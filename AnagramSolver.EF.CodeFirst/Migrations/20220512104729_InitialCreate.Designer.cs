// <auto-generated />
using System;
using AnagramSolver.EF.CodeFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnagramSolver.EF.CodeFirst.Migrations
{
    [DbContext(typeof(AnagramSolverDbContext))]
    [Migration("20220512104729_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.4.22229.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AnagramSolver.EF.CodeFirst.Models.CachedWordEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AnagramId")
                        .HasColumnType("int");

                    b.Property<string>("InputWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AnagramId");

                    b.ToTable("CachedWord", (string)null);
                });

            modelBuilder.Entity("AnagramSolver.EF.CodeFirst.Models.SearchInfoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AnagramId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("ExecTime")
                        .HasColumnType("time");

                    b.Property<string>("SearchedWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserIp")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("AnagramId");

                    b.ToTable("SearchInfo", (string)null);
                });

            modelBuilder.Entity("AnagramSolver.EF.CodeFirst.Models.WordEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Word", (string)null);
                });

            modelBuilder.Entity("AnagramSolver.EF.CodeFirst.Models.CachedWordEntity", b =>
                {
                    b.HasOne("AnagramSolver.EF.CodeFirst.Models.WordEntity", "Anagram")
                        .WithMany("CachedWords")
                        .HasForeignKey("AnagramId");

                    b.Navigation("Anagram");
                });

            modelBuilder.Entity("AnagramSolver.EF.CodeFirst.Models.SearchInfoEntity", b =>
                {
                    b.HasOne("AnagramSolver.EF.CodeFirst.Models.WordEntity", "Anagram")
                        .WithMany("SearchInfos")
                        .HasForeignKey("AnagramId");

                    b.Navigation("Anagram");
                });

            modelBuilder.Entity("AnagramSolver.EF.CodeFirst.Models.WordEntity", b =>
                {
                    b.Navigation("CachedWords");

                    b.Navigation("SearchInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
